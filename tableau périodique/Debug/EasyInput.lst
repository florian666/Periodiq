SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Apr-2015 14:05:14  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\mosnier\Desktop\Periodiq\tableau périodique\EasyInput.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      EasyInput.     1    #include "EasyInput.h"
      EasyInput.     2    
      EasyInput.     3    char *EI_input_string(int string_length, const char *chars_allowed)
P   00000000              _EI_input_string:                ; function: EI_input_string
                                                           ; frame size=76
                                                           ; used runtime library name:
                                                           ; __slow_mvn
    00000000 2FE6                   MOV.L       R14,@-R15
      EasyInput.     4    {
      EasyInput.     5            char *string = (void*)(0);
      EasyInput.     6            EI_config *config = (void*)(0);
      EasyInput.     7            EI_cursor_settings cursor_settings;
      EasyInput.     8    
      EasyInput.     9            unsigned int key = 0;
      EasyInput.    10    
      EasyInput.    11            int i;
      EasyInput.    12            int char_deleted = 0;
      EasyInput.    13            int text_displacement = 0;
      EasyInput.    14            int cap = 1;
    00000002 E301                   MOV         #1,R3
      EasyInput.    15    
      EasyInput.    16            char arrow[] = {0xE6, 0x9A, 0};
    00000004 D23D                   MOV.L       L457+12,R2 ; L319
    00000006 2FD6                   MOV.L       R13,@-R15
    00000008 2FC6                   MOV.L       R12,@-R15
    0000000A 2FB6                   MOV.L       R11,@-R15
    0000000C 2FA6                   MOV.L       R10,@-R15
    0000000E EA00                   MOV         #0,R10
    00000010 DC39                   MOV.L       L457+8,R12 ; _EI_Cursor_SetPosition
    00000012 2F96                   MOV.L       R9,@-R15
    00000014 2F86                   MOV.L       R8,@-R15
    00000016 69A3                   MOV         R10,R9
    00000018 4F22                   STS.L       PR,@-R15
    0000001A 7FDC                   ADD         #-36,R15
    0000001C 1F41                   MOV.L       R4,@(4,R15)
    0000001E 61F3                   MOV         R15,R1
    00000020 1F53                   MOV.L       R5,@(12,R15)
    00000022 7110                   ADD         #16,R1
    00000024 2FA2                   MOV.L       R10,@R15
    00000026 1F32                   MOV.L       R3,@(8,R15)
    00000028 D335                   MOV.L       L457+16,R3 ; __slow_mvn
    0000002A 430B                   JSR         @R3
    0000002C E003                   MOV         #3,R0
      EasyInput.    17    
      EasyInput.    18    
      EasyInput.    19            // Get actual configuration
      EasyInput.    20            config = (EI_config*)EI_manage_config(EI_GET_ALL, 0);
    0000002E 6593                   MOV         R9,R5
    00000030 B198                   BSR         _EI_manage_config
    00000032 E4FF                   MOV         #-1,R4
      EasyInput.    21    
      EasyInput.    22            // Allocate RAM for string
      EasyInput.    23            string = (char*)malloc(sizeof(char) * string_length + 1);
    00000034 54F1                   MOV.L       @(4,R15),R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Apr-2015 14:05:14  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000036 6E03                   MOV         R0,R14
    00000038 D332                   MOV.L       L457+20,R3 ; _malloc
    0000003A 430B                   JSR         @R3
    0000003C 7401                   ADD         #1,R4
    0000003E 6D03                   MOV         R0,R13
      EasyInput.    24    
      EasyInput.    25            // Initialize string
      EasyInput.    26            for(i = 0; i <= string_length; i++) string[i] = 0;
    00000040 52F1                   MOV.L       @(4,R15),R2
    00000042 6403                   MOV         R0,R4
    00000044 4211                   CMP/PZ      R2
    00000046 8F06                   BF/S        L402
    00000048 6593                   MOV         R9,R5
    0000004A              L403:                             
    0000004A 7501                   ADD         #1,R5
    0000004C 24A0                   MOV.B       R10,@R4
    0000004E 52F1                   MOV.L       @(4,R15),R2
    00000050 3527                   CMP/GT      R2,R5
    00000052 8FFA                   BF/S        L403
    00000054 7401                   ADD         #1,R4
    00000056              L402:                             
      EasyInput.    27    
      EasyInput.    28            // Setup cursor flash
      EasyInput.    29            switch(config->align)
    00000056 50E3                   MOV.L       @(12,R14),R0
    00000058 8801                   CMP/EQ      #1,R0
    0000005A 8903                   BT          L370
    0000005C 8802                   CMP/EQ      #2,R0
    0000005E 8904                   BT          L371
    00000060 8803                   CMP/EQ      #3,R0
    00000062 8908                   BT          L372
    00000064              L370:                            ; case label 
      EasyInput.    30            {
      EasyInput.    31                    default:
      EasyInput.    32                    case EI_ALIGN_LEFT:
      EasyInput.    33                            EI_Cursor_SetPosition(config->column, config->row);
    00000064 55E1                   MOV.L       @(4,R14),R5
      EasyInput.    34                            break;
    00000066 A00B                   BRA         L451
    00000068 64E2                   MOV.L       @R14,R4
    0000006A              L371:                            ; case label 
      EasyInput.    35    
      EasyInput.    36                    case EI_ALIGN_CENTER:
      EasyInput.    37                            EI_Cursor_SetPosition(config->column + (config->box_length >> 1), config->row);
    0000006A 64E2                   MOV.L       @R14,R4
    0000006C 53E2                   MOV.L       @(8,R14),R3
    0000006E 4301                   SHLR        R3
    00000070 343C                   ADD         R3,R4
      EasyInput.    38                            break;
    00000072 A005                   BRA         L451
    00000074 55E1                   MOV.L       @(4,R14),R5
    00000076              L372:                            ; case label 
      EasyInput.    39    
      EasyInput.    40                    case EI_ALIGN_RIGHT:
      EasyInput.    41                            EI_Cursor_SetPosition(config->column + config->box_length - 1, config->row);
    00000076 55E1                   MOV.L       @(4,R14),R5
    00000078 64E2                   MOV.L       @R14,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Apr-2015 14:05:14  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000007A 53E2                   MOV.L       @(8,R14),R3
    0000007C 343C                   ADD         R3,R4
    0000007E 74FF                   ADD         #-1,R4
      EasyInput.    42                            break;
    00000080              L451:                             
    00000080 4C0B                   JSR         @R12
    00000082 0009                   NOP
      EasyInput.    43            }
      EasyInput.    44    
      EasyInput.    45            if(config->start_mode == EI_ALPHA_LOCKED)
    00000084 50E4                   MOV.L       @(16,R14),R0
    00000086 8803                   CMP/EQ      #3,R0
    00000088 8B06                   BF          L405
      EasyInput.    46            {
      EasyInput.    47                    EI_KBD_PutKey(KEY_CTRL_SHIFT, 0);
    0000008A 9431                   MOV.W       L457,R4    ; H'7536
    0000008C D21E                   MOV.L       L457+24,R2 ; _EI_KBD_PutKey
    0000008E 420B                   JSR         @R2
    00000090 E500                   MOV         #0,R5
      EasyInput.    48                    GetKey(&key);
    00000092 D31E                   MOV.L       L457+28,R3 ; _GetKey
    00000094 430B                   JSR         @R3
    00000096 64F3                   MOV         R15,R4
    00000098              L405:                             
      EasyInput.    49            }
      EasyInput.    50    
      EasyInput.    51            if(config->start_mode >= EI_ALPHA)
    00000098 53E4                   MOV.L       @(16,R14),R3
    0000009A E202                   MOV         #2,R2
    0000009C 3322                   CMP/HS      R2,R3
    0000009E 8B08                   BF          L406
      EasyInput.    52            {
      EasyInput.    53                    EI_KBD_PutKey(KEY_CTRL_ALPHA, 0);
    000000A0 9427                   MOV.W       L457+2,R4  ; H'7537
    000000A2 D319                   MOV.L       L457+24,R3 ; _EI_KBD_PutKey
    000000A4 430B                   JSR         @R3
    000000A6 E500                   MOV         #0,R5
      EasyInput.    54                    GetKey(&key);
    000000A8 D218                   MOV.L       L457+28,R2 ; _GetKey
    000000AA 420B                   JSR         @R2
    000000AC 64F3                   MOV         R15,R4
      EasyInput.    55                    EI_Cursor_SetFlashOn(3);
    000000AE A001                   BRA         L452
    000000B0 E403                   MOV         #3,R4
    000000B2              L406:                             
      EasyInput.    56            }
      EasyInput.    57            else
      EasyInput.    58            {
      EasyInput.    59                    EI_Cursor_SetFlashOn(0);
    000000B2 E400                   MOV         #0,R4
    000000B4              L452:                             
    000000B4 D316                   MOV.L       L457+32,R3 ; _EI_Cursor_SetFlashOn
    000000B6 430B                   JSR         @R3
    000000B8 0009                   NOP
      EasyInput.    60            }
      EasyInput.    61    
      EasyInput.    62    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Apr-2015 14:05:14  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      EasyInput.    63            // Main loop
      EasyInput.    64            i = 0;
      EasyInput.    65            while(key != KEY_CTRL_EXE && key != KEY_CTRL_AC)
    000000BA A132                   BRA         L408
    000000BC 68A3                   MOV         R10,R8
    000000BE              L409:                             
      EasyInput.    66            {
      EasyInput.    67                    EI_Cursor_GetSettings(&cursor_settings);
    000000BE 64F3                   MOV         R15,R4
    000000C0 DB14                   MOV.L       L457+36,R11; _EI_Cursor_GetSettings
    000000C2 4B0B                   JSR         @R11
    000000C4 7414                   ADD         #20,R4
      EasyInput.    68                    
      EasyInput.    69                    if(cursor_settings.flashstyle == 3 && !cap)
    000000C6 50F5                   MOV.L       @(20,R15),R0
    000000C8 8803                   CMP/EQ      #3,R0
    000000CA 8B05                   BF          L410
    000000CC 52F2                   MOV.L       @(8,R15),R2
    000000CE 2228                   TST         R2,R2
    000000D0 8B02                   BF          L410
      EasyInput.    70                            EI_Cursor_SetFlashOn(4);
    000000D2 D30F                   MOV.L       L457+32,R3 ; _EI_Cursor_SetFlashOn
    000000D4 430B                   JSR         @R3
    000000D6 E404                   MOV         #4,R4
    000000D8              L410:                             
      EasyInput.    71    
      EasyInput.    72                    GetKey(&key); // Getting key pressed
    000000D8 D20C                   MOV.L       L457+28,R2 ; _GetKey
    000000DA 420B                   JSR         @R2
    000000DC 64F3                   MOV         R15,R4
      EasyInput.    73    
      EasyInput.    74                    switch(key) // Analyse key pressed
    000000DE 60F2                   MOV.L       @R15,R0
    000000E0 9108                   MOV.W       L457+4,R1  ; H'7539
    000000E2 3010                   CMP/EQ      R1,R0
    000000E4 8918                   BT          L373
    000000E6 9106                   MOV.W       L457+6,R1  ; H'7549
    000000E8 3010                   CMP/EQ      R1,R0
    000000EA 891A                   BT          L374
    000000EC A020                   BRA         L375
    000000EE 0009                   NOP
    000000F0              L457:                             
    000000F0 7536                   .DATA.W     H'7536
    000000F2 7537                   .DATA.W     H'7537
    000000F4 7539                   .DATA.W     H'7539
    000000F6 7549                   .DATA.W     H'7549
    000000F8 <00000000>             .DATA.L     _EI_Cursor_SetPosition
    000000FC <00000000>             .DATA.L     L319
    00000100 <00000000>             .DATA.L     __slow_mvn
    00000104 <00000000>             .DATA.L     _malloc
    00000108 <00000000>             .DATA.L     _EI_KBD_PutKey
    0000010C <00000000>             .DATA.L     _GetKey
    00000110 <00000000>             .DATA.L     _EI_Cursor_SetFlashOn
    00000114 <00000000>             .DATA.L     _EI_Cursor_GetSettings
    00000118              L373:                            ; case label 
      EasyInput.    75                    {
      EasyInput.    76                            case KEY_CTRL_F1:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Apr-2015 14:05:14  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      EasyInput.    77                                    cap = !cap;
    00000118 50F2                   MOV.L       @(8,R15),R0
    0000011A 2008                   TST         R0,R0
    0000011C 0029                   MOVT        R0
      EasyInput.    78                                    break;
    0000011E A02A                   BRA         L411
    00000120 1F02                   MOV.L       R0,@(8,R15)
    00000122              L374:                            ; case label 
      EasyInput.    79    
      EasyInput.    80                            case KEY_CTRL_DEL:
      EasyInput.    81                                    if(i > 0)
    00000122 4815                   CMP/PL      R8
    00000124 8B27                   BF          L411
      EasyInput.    82                                    {
      EasyInput.    83                                            i--;
    00000126 78FF                   ADD         #-1,R8
      EasyInput.    84                                            string[i] = 0;
    00000128 6083                   MOV         R8,R0
    0000012A 0DA4                   MOV.B       R10,@(R0,R13)
      EasyInput.    85                                            char_deleted = 1;
      EasyInput.    86                                    }
      EasyInput.    87                                    break;
    0000012C A023                   BRA         L411
    0000012E E901                   MOV         #1,R9
    00000130              L375:                            ; default label 
      EasyInput.    88    
      EasyInput.    89                            default:
      EasyInput.    90                                    if(key > 127) // KEY_CTRL_***, etc.
    00000130 62F2                   MOV.L       @R15,R2
    00000132 E47F                   MOV         #127,R4
    00000134 3246                   CMP/HI      R4,R2
    00000136 891E                   BT          L411
      EasyInput.    91                                            break;
      EasyInput.    92    
      EasyInput.    93                                    if(key >= 'A' && key <= 'Z') key += !cap * 32; // Switch between caps
    00000138 63F2                   MOV.L       @R15,R3
    0000013A E441                   MOV         #65,R4
    0000013C 3342                   CMP/HS      R4,R3
    0000013E 8B0C                   BF          L415
    00000140 62F2                   MOV.L       @R15,R2
    00000142 E15A                   MOV         #90,R1
    00000144 3216                   CMP/HI      R1,R2
    00000146 8908                   BT          L415
    00000148 50F2                   MOV.L       @(8,R15),R0
    0000014A 2008                   TST         R0,R0
    0000014C 63F2                   MOV.L       @R15,R3
    0000014E 0029                   MOVT        R0
    00000150 4008                   SHLL2       R0
    00000152 4008                   SHLL2       R0
    00000154 4000                   SHLL        R0
    00000156 330C                   ADD         R0,R3
    00000158 2F32                   MOV.L       R3,@R15
    0000015A              L415:                             
      EasyInput.    94    
      EasyInput.    95                                    if(EI_check_char(key, chars_allowed) && EI_str_length(string) != string_le
                         +ngth) // Add char if we can
    0000015A 55F3                   MOV.L       @(12,R15),R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Apr-2015 14:05:14  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000015C B181                   BSR         _EI_check_char
    0000015E 64F2                   MOV.L       @R15,R4
    00000160 2008                   TST         R0,R0
    00000162 8908                   BT          L411
    00000164 B174                   BSR         _EI_str_length
    00000166 64D3                   MOV         R13,R4
    00000168 52F1                   MOV.L       @(4,R15),R2
    0000016A 3020                   CMP/EQ      R2,R0
    0000016C 8903                   BT          L411
      EasyInput.    96                                    {
      EasyInput.    97                                            string[i] = key;
    0000016E 6083                   MOV         R8,R0
    00000170 63F2                   MOV.L       @R15,R3
      EasyInput.    98                                            i++;
    00000172 7801                   ADD         #1,R8
    00000174 0D34                   MOV.B       R3,@(R0,R13)
    00000176              L411:                             
      EasyInput.    99                                    }
      EasyInput.   100                    }
      EasyInput.   101    
      EasyInput.   102                    switch(config->align) // Print string
    00000176 DB61                   MOV.L       L458,R11   ; _Print
    00000178 50E3                   MOV.L       @(12,R14),R0
    0000017A 8801                   CMP/EQ      #1,R0
    0000017C 8905                   BT          L377
    0000017E 8802                   CMP/EQ      #2,R0
    00000180 891B                   BT          L379
    00000182 8803                   CMP/EQ      #3,R0
    00000184 8B01                   BF          L459
    00000186 A08A                   BRA         L380
    00000188 0009                   NOP
    0000018A              L459:                             
    0000018A              L377:                            ; case label 
      EasyInput.   103                    {
      EasyInput.   104                            default:
      EasyInput.   105                            case EI_ALIGN_LEFT:
      EasyInput.   106                                    if(EI_str_length(string) < config->box_length)
    0000018A B161                   BSR         _EI_str_length
    0000018C 64D3                   MOV         R13,R4
    0000018E 53E2                   MOV.L       @(8,R14),R3
    00000190 3032                   CMP/HS      R3,R0
    00000192 8B01                   BF          L460
    00000194 A0B6                   BRA         L367
    00000196 0009                   NOP
    00000198              L460:                             
      EasyInput.   107                                    {
      EasyInput.   108                                            EI_Cursor_SetPosition(config->column, config->row);
    00000198 55E1                   MOV.L       @(4,R14),R5
    0000019A 4C0B                   JSR         @R12
    0000019C 64E2                   MOV.L       @R14,R4
      EasyInput.   109                                            Print((unsigned char*)string);
    0000019E 4B0B                   JSR         @R11
    000001A0 64D3                   MOV         R13,R4
      EasyInput.   110                                            if(char_deleted && EI_str_length(string) != config->box_length - 1
                         +)
    000001A2 2998                   TST         R9,R9
    000001A4 8B01                   BF          L461




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Apr-2015 14:05:14  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001A6 A0BC                   BRA         L408
    000001A8 0009                   NOP
    000001AA              L461:                             
    000001AA B151                   BSR         _EI_str_length
    000001AC 64D3                   MOV         R13,R4
    000001AE 53E2                   MOV.L       @(8,R14),R3
    000001B0 73FF                   ADD         #-1,R3
    000001B2 3030                   CMP/EQ      R3,R0
    000001B4 8B5B                   BF          L362
      EasyInput.   111                                            {
      EasyInput.   112                                                    Print((unsigned char*)" ");
      EasyInput.   113                                                    EI_Cursor_SetPosition(cursor_settings.column - 2, config->
                         +row);
      EasyInput.   114                                                    char_deleted = 0;
    000001B6 A0B4                   BRA         L408
    000001B8 0009                   NOP
    000001BA              L379:                            ; case label 
      EasyInput.   115                                            }
      EasyInput.   116                                    }
      EasyInput.   117                                    else
      EasyInput.   118                                    {
      EasyInput.   119                                            EI_Cursor_SetPosition(config->column, config->row);
      EasyInput.   120                                            Print((unsigned char*)arrow);
      EasyInput.   121                                            Print((unsigned char*)(string + EI_str_length(string) - config->bo
                         +x_length + 2));
      EasyInput.   122                                    }
      EasyInput.   123                                    break;
      EasyInput.   124    
      EasyInput.   125                            case EI_ALIGN_CENTER:
      EasyInput.   126                                    if(EI_str_length(string) < config->box_length)
    000001BA B149                   BSR         _EI_str_length
    000001BC 64D3                   MOV         R13,R4
    000001BE 52E2                   MOV.L       @(8,R14),R2
    000001C0 3022                   CMP/HS      R2,R0
    000001C2 8B01                   BF          L462
    000001C4 A09E                   BRA         L367
    000001C6 0009                   NOP
    000001C8              L462:                             
      EasyInput.   127                                    {
      EasyInput.   128                                            if(char_deleted && EI_str_length(string) != config->box_length - 1
                         + && (config->box_length - EI_str_length(string)) >> 1 != ((config->box_length - EI_str_length(string) - 1)
                         + >> 1))
    000001C8 2998                   TST         R9,R9
    000001CA 8959                   BT          L425
    000001CC B140                   BSR         _EI_str_length
    000001CE 64D3                   MOV         R13,R4
    000001D0 52E2                   MOV.L       @(8,R14),R2
    000001D2 72FF                   ADD         #-1,R2
    000001D4 3020                   CMP/EQ      R2,R0
    000001D6 8924                   BT          L423
    000001D8 B13A                   BSR         _EI_str_length
    000001DA 64D3                   MOV         R13,R4
    000001DC 53E2                   MOV.L       @(8,R14),R3
    000001DE 3308                   SUB         R0,R3
    000001E0 4301                   SHLR        R3
    000001E2 2F36                   MOV.L       R3,@-R15
    000001E4 B134                   BSR         _EI_str_length




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Apr-2015 14:05:14  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001E6 64D3                   MOV         R13,R4
    000001E8 52E2                   MOV.L       @(8,R14),R2
    000001EA 3208                   SUB         R0,R2
    000001EC 61F6                   MOV.L       @R15+,R1
    000001EE 72FF                   ADD         #-1,R2
    000001F0 4201                   SHLR        R2
    000001F2 3120                   CMP/EQ      R2,R1
    000001F4 8915                   BT          L423
      EasyInput.   129                                            {
      EasyInput.   130                                                    EI_Cursor_SetPosition(config->column + ((config->box_lengt
                         +h - EI_str_length(string)) >> 1) - 1, config->row);
    000001F6 55E1                   MOV.L       @(4,R14),R5
    000001F8 2F56                   MOV.L       R5,@-R15
    000001FA 62E2                   MOV.L       @R14,R2
    000001FC 2F26                   MOV.L       R2,@-R15
    000001FE B127                   BSR         _EI_str_length
    00000200 64D3                   MOV         R13,R4
    00000202 52E2                   MOV.L       @(8,R14),R2
    00000204 61F6                   MOV.L       @R15+,R1
    00000206 3208                   SUB         R0,R2
    00000208 4201                   SHLR        R2
    0000020A 321C                   ADD         R1,R2
    0000020C 6423                   MOV         R2,R4
    0000020E 74FF                   ADD         #-1,R4
    00000210 4C0B                   JSR         @R12
    00000212 65F6                   MOV.L       @R15+,R5
      EasyInput.   131                                                    Print((unsigned char*)" ");
    00000214 D43A                   MOV.L       L458+4,R4  ; L332
    00000216 4B0B                   JSR         @R11
    00000218 0009                   NOP
      EasyInput.   132                                                    Print((unsigned char*)string);
    0000021A 4B0B                   JSR         @R11
    0000021C 64D3                   MOV         R13,R4
    0000021E A02D                   BRA         L363
    00000220 0009                   NOP
    00000222              L423:                             
      EasyInput.   133                                                    char_deleted = 0;
      EasyInput.   134                                            }
      EasyInput.   135                                            else if(char_deleted && EI_str_length(string) != config->box_lengt
                         +h - 1 && (config->box_length - EI_str_length(string)) >> 1 == ((config->box_length - EI_str_length(string)
                         + - 1) >> 1))
    00000222 2998                   TST         R9,R9
    00000224 892C                   BT          L425
    00000226 B113                   BSR         _EI_str_length
    00000228 64D3                   MOV         R13,R4
    0000022A 53E2                   MOV.L       @(8,R14),R3
    0000022C 73FF                   ADD         #-1,R3
    0000022E 3030                   CMP/EQ      R3,R0
    00000230 8926                   BT          L425
    00000232 B10D                   BSR         _EI_str_length
    00000234 64D3                   MOV         R13,R4
    00000236 52E2                   MOV.L       @(8,R14),R2
    00000238 3208                   SUB         R0,R2
    0000023A 4201                   SHLR        R2
    0000023C 2F26                   MOV.L       R2,@-R15
    0000023E B107                   BSR         _EI_str_length
    00000240 64D3                   MOV         R13,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Apr-2015 14:05:14  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000242 53E2                   MOV.L       @(8,R14),R3
    00000244 61F6                   MOV.L       @R15+,R1
    00000246 3308                   SUB         R0,R3
    00000248 73FF                   ADD         #-1,R3
    0000024A 4301                   SHLR        R3
    0000024C 3130                   CMP/EQ      R3,R1
    0000024E 8B17                   BF          L425
      EasyInput.   136                                            {
      EasyInput.   137                                                    EI_Cursor_SetPosition(config->column + ((config->box_lengt
                         +h - EI_str_length(string)) >> 1), config->row);
    00000250 55E1                   MOV.L       @(4,R14),R5
    00000252 2F56                   MOV.L       R5,@-R15
    00000254 62E2                   MOV.L       @R14,R2
    00000256 2F26                   MOV.L       R2,@-R15
    00000258 B0FA                   BSR         _EI_str_length
    0000025A 64D3                   MOV         R13,R4
    0000025C 52E2                   MOV.L       @(8,R14),R2
    0000025E 3208                   SUB         R0,R2
    00000260 64F6                   MOV.L       @R15+,R4
    00000262 4201                   SHLR        R2
    00000264 342C                   ADD         R2,R4
    00000266 4C0B                   JSR         @R12
    00000268 65F6                   MOV.L       @R15+,R5
      EasyInput.   138                                                    Print((unsigned char*)string);
    0000026A 4B0B                   JSR         @R11
    0000026C 64D3                   MOV         R13,R4
    0000026E              L362:
      EasyInput.   139                                                    Print((unsigned char*)" ");
    0000026E D424                   MOV.L       L458+4,R4  ; L332
    00000270 4B0B                   JSR         @R11
    00000272 0009                   NOP
      EasyInput.   140                                                    EI_Cursor_SetPosition(cursor_settings.column - 2, config->
                         +row);
    00000274 55E1                   MOV.L       @(4,R14),R5
    00000276 54F6                   MOV.L       @(24,R15),R4
    00000278 4C0B                   JSR         @R12
    0000027A 74FE                   ADD         #-2,R4
    0000027C              L363:
      EasyInput.   141                                                    char_deleted = 0;
    0000027C A051                   BRA         L408
    0000027E 69A3                   MOV         R10,R9
    00000280              L425:                             
      EasyInput.   142                                            }
      EasyInput.   143                                            else
      EasyInput.   144                                            {
      EasyInput.   145                                                    EI_Cursor_SetPosition(config->column + ((config->box_lengt
                         +h - EI_str_length(string)) >> 1), config->row);
    00000280 55E1                   MOV.L       @(4,R14),R5
    00000282 2F56                   MOV.L       R5,@-R15
    00000284 62E2                   MOV.L       @R14,R2
    00000286 2F26                   MOV.L       R2,@-R15
    00000288 B0E2                   BSR         _EI_str_length
    0000028A 64D3                   MOV         R13,R4
    0000028C 52E2                   MOV.L       @(8,R14),R2
    0000028E 3208                   SUB         R0,R2
    00000290 64F6                   MOV.L       @R15+,R4
    00000292 4201                   SHLR        R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Apr-2015 14:05:14  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000294 342C                   ADD         R2,R4
    00000296 4C0B                   JSR         @R12
    00000298 65F6                   MOV.L       @R15+,R5
    0000029A A02D                   BRA         L365
    0000029C 0009                   NOP
    0000029E              L380:                            ; case label 
      EasyInput.   146                                                    Print((unsigned char*)string);
      EasyInput.   147                                            }
      EasyInput.   148                                    }
      EasyInput.   149                                    else
      EasyInput.   150                                    {
      EasyInput.   151                                            EI_Cursor_SetPosition(config->column, config->row);
      EasyInput.   152                                            Print((unsigned char*)arrow);
      EasyInput.   153                                            Print((unsigned char*)(string + EI_str_length(string) - config->bo
                         +x_length + 2));
      EasyInput.   154                                    }
      EasyInput.   155                                    break;
      EasyInput.   156    
      EasyInput.   157                            case EI_ALIGN_RIGHT:
      EasyInput.   158                                    if(EI_str_length(string) < config->box_length)
    0000029E B0D7                   BSR         _EI_str_length
    000002A0 64D3                   MOV         R13,R4
    000002A2 53E2                   MOV.L       @(8,R14),R3
    000002A4 3032                   CMP/HS      R3,R0
    000002A6 892D                   BT          L367
      EasyInput.   159                                    {
      EasyInput.   160                                            EI_Cursor_SetPosition(config->column + config->box_length - EI_str
                         +_length(string) - (char_deleted && EI_str_length(string) != config->box_length - 1) - 1, config->row);
    000002A8 55E1                   MOV.L       @(4,R14),R5
    000002AA 2F56                   MOV.L       R5,@-R15
    000002AC 53E2                   MOV.L       @(8,R14),R3
    000002AE 62E2                   MOV.L       @R14,R2
    000002B0 323C                   ADD         R3,R2
    000002B2 2F26                   MOV.L       R2,@-R15
    000002B4 B0CC                   BSR         _EI_str_length
    000002B6 64D3                   MOV         R13,R4
    000002B8 61F6                   MOV.L       @R15+,R1
    000002BA 2998                   TST         R9,R9
    000002BC 3108                   SUB         R0,R1
    000002BE 8D08                   BT/S        L429
    000002C0 2F16                   MOV.L       R1,@-R15
    000002C2 B0C5                   BSR         _EI_str_length
    000002C4 64D3                   MOV         R13,R4
    000002C6 53E2                   MOV.L       @(8,R14),R3
    000002C8 73FF                   ADD         #-1,R3
    000002CA 3030                   CMP/EQ      R3,R0
    000002CC 8901                   BT          L429
    000002CE A001                   BRA         L430
    000002D0 E301                   MOV         #1,R3
    000002D2              L429:                             
    000002D2 E300                   MOV         #0,R3
    000002D4              L430:                             
    000002D4 60F6                   MOV.L       @R15+,R0
    000002D6 3038                   SUB         R3,R0
    000002D8 6403                   MOV         R0,R4
    000002DA 74FF                   ADD         #-1,R4
    000002DC 4C0B                   JSR         @R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Apr-2015 14:05:14  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002DE 65F6                   MOV.L       @R15+,R5
      EasyInput.   161                                            if(char_deleted && EI_str_length(string) != config->box_length - 1
                         +)
    000002E0 2998                   TST         R9,R9
    000002E2 8909                   BT          L365
    000002E4 B0B4                   BSR         _EI_str_length
    000002E6 64D3                   MOV         R13,R4
    000002E8 53E2                   MOV.L       @(8,R14),R3
    000002EA 73FF                   ADD         #-1,R3
    000002EC 3030                   CMP/EQ      R3,R0
    000002EE 8903                   BT          L365
      EasyInput.   162                                            {
      EasyInput.   163                                                    Print((unsigned char*)" ");
    000002F0 D403                   MOV.L       L458+4,R4  ; L332
    000002F2 4B0B                   JSR         @R11
    000002F4 0009                   NOP
      EasyInput.   164                                                    char_deleted = 0;
    000002F6 69A3                   MOV         R10,R9
    000002F8              L365:
      EasyInput.   165                                            }
      EasyInput.   166                                            Print((unsigned char*)string);
    000002F8 A011                   BRA         L453
    000002FA 64D3                   MOV         R13,R4
    000002FC              L458:                             
    000002FC <00000000>             .DATA.L     _Print
    00000300 <00000000>             .DATA.L     L332
    00000304              L367:
      EasyInput.   167                                    }
      EasyInput.   168                                    else
      EasyInput.   169                                    {
      EasyInput.   170                                            EI_Cursor_SetPosition(config->column, config->row);
    00000304 55E1                   MOV.L       @(4,R14),R5
    00000306 4C0B                   JSR         @R12
    00000308 64E2                   MOV.L       @R14,R4
      EasyInput.   171                                            Print((unsigned char*)arrow);
    0000030A 64F3                   MOV         R15,R4
    0000030C 4B0B                   JSR         @R11
    0000030E 7410                   ADD         #16,R4
      EasyInput.   172                                            Print((unsigned char*)(string + EI_str_length(string) - config->bo
                         +x_length + 2));
    00000310 B09E                   BSR         _EI_str_length
    00000312 64D3                   MOV         R13,R4
    00000314 53E2                   MOV.L       @(8,R14),R3
    00000316 30DC                   ADD         R13,R0
    00000318 3038                   SUB         R3,R0
    0000031A 6403                   MOV         R0,R4
    0000031C 7402                   ADD         #2,R4
    0000031E              L453:                             
    0000031E 4B0B                   JSR         @R11
    00000320 0009                   NOP
      EasyInput.   173                                    }
      EasyInput.   174                                    break;
    00000322              L408:                             
    00000322 9448                   MOV.W       L463,R4    ; H'7534
    00000324 63F2                   MOV.L       @R15,R3
    00000326 3340                   CMP/EQ      R4,R3
    00000328 8905                   BT          L433




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Apr-2015 14:05:14  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000032A 9145                   MOV.W       L463+2,R1  ; H'753F
    0000032C 62F2                   MOV.L       @R15,R2
    0000032E 3210                   CMP/EQ      R1,R2
    00000330 8901                   BT          L464
    00000332 AEC4                   BRA         L409
    00000334 0009                   NOP
    00000336              L464:                             
    00000336              L433:                             
      EasyInput.   175                    }
      EasyInput.   176            }
      EasyInput.   177    
      EasyInput.   178            // Set off cursor mode
      EasyInput.   179            EI_Cursor_SetFlashOff();
    00000336 D321                   MOV.L       L463+6,R3  ; _EI_Cursor_SetFlashOff
    00000338 430B                   JSR         @R3
    0000033A 0009                   NOP
      EasyInput.   180    
      EasyInput.   181    
      EasyInput.   182            // Return NULL in case of an input break
      EasyInput.   183            if(key == KEY_CTRL_AC)
    0000033C 933C                   MOV.W       L463+2,R3  ; H'753F
    0000033E 62F2                   MOV.L       @R15,R2
    00000340 3230                   CMP/EQ      R3,R2
    00000342 8B04                   BF          L434
      EasyInput.   184            {
      EasyInput.   185                    free(string);
    00000344 D21E                   MOV.L       L463+10,R2 ; _free
    00000346 420B                   JSR         @R2
    00000348 64D3                   MOV         R13,R4
      EasyInput.   186                    return (char*)(0);
    0000034A A001                   BRA         L435
    0000034C E000                   MOV         #0,R0
    0000034E              L434:                             
      EasyInput.   187            }
      EasyInput.   188    
      EasyInput.   189    
      EasyInput.   190            // Return the string
      EasyInput.   191            return string;
    0000034E 60D3                   MOV         R13,R0
      EasyInput.   192    }
    00000350              L435:                             
    00000350 7F24                   ADD         #36,R15
    00000352 4F26                   LDS.L       @R15+,PR
    00000354 68F6                   MOV.L       @R15+,R8
    00000356 69F6                   MOV.L       @R15+,R9
    00000358 6AF6                   MOV.L       @R15+,R10
    0000035A 6BF6                   MOV.L       @R15+,R11
    0000035C 6CF6                   MOV.L       @R15+,R12
    0000035E 6DF6                   MOV.L       @R15+,R13
    00000360 000B                   RTS
    00000362 6EF6                   MOV.L       @R15+,R14
      EasyInput.   193    
      EasyInput.   194    const void *EI_manage_config(int parameter, int value)
    00000364              _EI_manage_config:               ; function: EI_manage_config
                                                           ; frame size=0
      EasyInput.   195    {
      EasyInput.   196            static EI_config config;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Apr-2015 14:05:14  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      EasyInput.   197    
      EasyInput.   198            if(value)
    00000364 2558                   TST         R5,R5
    00000366 8939                   BT          L436
      EasyInput.   199            {
      EasyInput.   200                    switch(parameter)
    00000368 6043                   MOV         R4,R0
    0000036A 8800                   CMP/EQ      #0,R0
    0000036C 890B                   BT          L382
    0000036E 8801                   CMP/EQ      #1,R0
    00000370 890C                   BT          L383
    00000372 8802                   CMP/EQ      #2,R0
    00000374 890D                   BT          L384
    00000376 8803                   CMP/EQ      #3,R0
    00000378 8914                   BT          L385
    0000037A 8804                   CMP/EQ      #4,R0
    0000037C 8915                   BT          L386
    0000037E 8805                   CMP/EQ      #5,R0
    00000380 8916                   BT          L387
    00000382 A04E                   BRA         L440
    00000384 0009                   NOP
    00000386              L382:                            ; case label 
      EasyInput.   201                    {
      EasyInput.   202                            case EI_SET_COLUMN: config.column = value - 1;
    00000386 D20F                   MOV.L       L463+14,R2 ; __$config$347
      EasyInput.   203                                    break;
    00000388 A010                   BRA         L455
    0000038A 75FF                   ADD         #-1,R5
    0000038C              L383:                            ; case label 
      EasyInput.   204                            case EI_SET_ROW: config.row = value - 1;
    0000038C D20E                   MOV.L       L463+18,R2 ; H'00000004+__$config$347
      EasyInput.   205                                    break;
    0000038E A00D                   BRA         L455
    00000390 75FF                   ADD         #-1,R5
    00000392              L384:                            ; case label 
      EasyInput.   206                            case EI_SET_BOX_LENGTH: config.box_length = (value < 3 ? 3 : value); // Minimal si
                         +ze is 3
    00000392 E403                   MOV         #3,R4
    00000394 3543                   CMP/GE      R4,R5
    00000396 8901                   BT          L438
    00000398 A001                   BRA         L439
    0000039A 6243                   MOV         R4,R2
    0000039C              L438:                             
    0000039C 6253                   MOV         R5,R2
    0000039E              L439:                             
    0000039E D30B                   MOV.L       L463+22,R3 ; H'00000008+__$config$347
      EasyInput.   207                                    break;
    000003A0 A03F                   BRA         L440
    000003A2 2322                   MOV.L       R2,@R3
    000003A4              L385:                            ; case label 
      EasyInput.   208                            case EI_SET_ALIGN: config.align = value;
    000003A4 D00A                   MOV.L       L463+26,R0 ; H'0000000C+__$config$347
      EasyInput.   209                                    break;
    000003A6 A03C                   BRA         L440
    000003A8 2052                   MOV.L       R5,@R0
    000003AA              L386:                            ; case label 
      EasyInput.   210                            case EI_SET_START_MODE: config.start_mode = value;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Apr-2015 14:05:14  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003AA D20A                   MOV.L       L463+30,R2 ; H'00000010+__$config$347
      EasyInput.   211                                    break;
    000003AC              L455:                             
    000003AC A039                   BRA         L440
    000003AE 2252                   MOV.L       R5,@R2
    000003B0              L387:                            ; case label 
      EasyInput.   212                            case EI_SET_Aa_KEY: config.Aa_key = value;
    000003B0 D109                   MOV.L       L463+34,R1 ; H'00000014+__$config$347
      EasyInput.   213                                    break;
    000003B2 A036                   BRA         L440
    000003B4 2152                   MOV.L       R5,@R1
    000003B6              L463:                             
    000003B6 7534                   .DATA.W     H'7534
    000003B8 753F                   .DATA.W     H'753F
    000003BA 0000                   .DATA.W     0
    000003BC <00000000>             .DATA.L     _EI_Cursor_SetFlashOff
    000003C0 <00000000>             .DATA.L     _free
    000003C4 <00000000>             .DATA.L     __$config$347
    000003C8 <00000004>             .DATA.L     H'00000004+__$config$347
    000003CC <00000008>             .DATA.L     H'00000008+__$config$347
    000003D0 <0000000C>             .DATA.L     H'0000000C+__$config$347
    000003D4 <00000010>             .DATA.L     H'00000010+__$config$347
    000003D8 <00000014>             .DATA.L     H'00000014+__$config$347
    000003DC              L436:                             
      EasyInput.   214                    }
      EasyInput.   215            }
      EasyInput.   216            else
      EasyInput.   217            {
      EasyInput.   218                    switch(parameter)
    000003DC 6043                   MOV         R4,R0
    000003DE 88FF                   CMP/EQ      #-1,R0
    000003E0 890D                   BT          L456
    000003E2 8800                   CMP/EQ      #0,R0
    000003E4 890B                   BT          L389
    000003E6 8801                   CMP/EQ      #1,R0
    000003E8 890C                   BT          L390
    000003EA 8802                   CMP/EQ      #2,R0
    000003EC 890D                   BT          L391
    000003EE 8803                   CMP/EQ      #3,R0
    000003F0 890E                   BT          L392
    000003F2 8804                   CMP/EQ      #4,R0
    000003F4 890F                   BT          L393
    000003F6 8805                   CMP/EQ      #5,R0
    000003F8 8910                   BT          L394
    000003FA A012                   BRA         L440
    000003FC 0009                   NOP
    000003FE              L389:                            ; case label 
      EasyInput.   219                    {
      EasyInput.   220                            case EI_GET_ALL: return (const void*)(&config);
      EasyInput.   221                            case EI_SET_COLUMN: return (const void*)&config.column;
    000003FE              L456:                             
    000003FE D021                   MOV.L       L465+4,R0  ; __$config$347
    00000400 000B                   RTS
    00000402 0009                   NOP
    00000404              L390:                            ; case label 
      EasyInput.   222                            case EI_SET_ROW: return (const void*)&config.row;
    00000404 D020                   MOV.L       L465+8,R0  ; H'00000004+__$config$347




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Apr-2015 14:05:14  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000406 000B                   RTS
    00000408 0009                   NOP
    0000040A              L391:                            ; case label 
      EasyInput.   223                            case EI_SET_BOX_LENGTH: return (const void*)&config.box_length;
    0000040A D020                   MOV.L       L465+12,R0 ; H'00000008+__$config$347
    0000040C 000B                   RTS
    0000040E 0009                   NOP
    00000410              L392:                            ; case label 
      EasyInput.   224                            case EI_SET_ALIGN: return (const void*)&config.align;
    00000410 D01F                   MOV.L       L465+16,R0 ; H'0000000C+__$config$347
    00000412 000B                   RTS
    00000414 0009                   NOP
    00000416              L393:                            ; case label 
      EasyInput.   225                            case EI_SET_START_MODE: return (const void*)&config.start_mode;
    00000416 D01F                   MOV.L       L465+20,R0 ; H'00000010+__$config$347
    00000418 000B                   RTS
    0000041A 0009                   NOP
    0000041C              L394:                            ; case label 
      EasyInput.   226                            case EI_SET_Aa_KEY: return (const void*)&config.Aa_key;
    0000041C D01E                   MOV.L       L465+24,R0 ; H'00000014+__$config$347
    0000041E 000B                   RTS
    00000420 0009                   NOP
    00000422              L440:                             
      EasyInput.   227                    }
      EasyInput.   228            }
      EasyInput.   229    
      EasyInput.   230            return (void*)(0);
    00000422 E000                   MOV         #0,R0
      EasyInput.   231    }
    00000424              L442:                             
    00000424 000B                   RTS
    00000426 0009                   NOP
      EasyInput.   232    
      EasyInput.   233    void EI_init(void)
    00000428              _EI_init:                        ; function: EI_init
                                                           ; frame size=4
    00000428 4F22                   STS.L       PR,@-R15
      EasyInput.   234    {
      EasyInput.   235            EI_manage_config(EI_SET_COLUMN, 1);
    0000042A E501                   MOV         #1,R5
    0000042C BF9A                   BSR         _EI_manage_config
    0000042E E400                   MOV         #0,R4
      EasyInput.   236            EI_manage_config(EI_SET_ROW, 1);
    00000430 E501                   MOV         #1,R5
    00000432 BF97                   BSR         _EI_manage_config
    00000434 6453                   MOV         R5,R4
      EasyInput.   237            EI_manage_config(EI_SET_ALIGN, EI_ALIGN_LEFT);
    00000436 E501                   MOV         #1,R5
    00000438 BF94                   BSR         _EI_manage_config
    0000043A E403                   MOV         #3,R4
      EasyInput.   238            EI_manage_config(EI_SET_START_MODE, EI_ALPHA_LOCKED);
    0000043C E503                   MOV         #3,R5
    0000043E BF91                   BSR         _EI_manage_config
    00000440 E404                   MOV         #4,R4
      EasyInput.   239            EI_manage_config(EI_SET_BOX_LENGTH, 21);
    00000442 E515                   MOV         #21,R5
    00000444 BF8E                   BSR         _EI_manage_config




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Apr-2015 14:05:14  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000446 E402                   MOV         #2,R4
      EasyInput.   240            EI_manage_config(EI_SET_Aa_KEY, KEY_CTRL_F1);
    00000448 951A                   MOV.W       L465,R5    ; H'7539
    0000044A E405                   MOV         #5,R4
    0000044C AF8A                   BRA         _EI_manage_config
    0000044E 4F26                   LDS.L       @R15+,PR
      EasyInput.   241    }
      EasyInput.   242    
      EasyInput.   243    int EI_str_length(const char *str)
    00000450              _EI_str_length:                  ; function: EI_str_length
                                                           ; frame size=0
      EasyInput.   244    {
      EasyInput.   245            int i = 0;
      EasyInput.   246    
      EasyInput.   247            while(str[i]) i++;
    00000450 A001                   BRA         L443
    00000452 E500                   MOV         #0,R5
    00000454              L444:                             
    00000454 7501                   ADD         #1,R5
    00000456              L443:                             
    00000456 6053                   MOV         R5,R0
    00000458 034C                   MOV.B       @(R0,R4),R3
    0000045A 2338                   TST         R3,R3
    0000045C 8BFA                   BF          L444
      EasyInput.   248            
      EasyInput.   249            return i;
      EasyInput.   250    }
    0000045E 000B                   RTS
    00000460 6053                   MOV         R5,R0
      EasyInput.   251    
      EasyInput.   252    int EI_check_char(char c, const char *chars_allowed)
    00000462              _EI_check_char:                  ; function: EI_check_char
                                                           ; frame size=0
      EasyInput.   253    {
      EasyInput.   254            int i = 0;
      EasyInput.   255    
      EasyInput.   256            while(chars_allowed[i])
    00000462 A007                   BRA         L446
    00000464 E000                   MOV         #0,R0
    00000466              L447:                             
      EasyInput.   257            {
      EasyInput.   258                    if(c == chars_allowed[i])
    00000466 634E                   EXTS.B      R4,R3
    00000468 025C                   MOV.B       @(R0,R5),R2
    0000046A 3320                   CMP/EQ      R2,R3
    0000046C 8B01                   BF          L448
      EasyInput.   259                            return 1;
    0000046E 000B                   RTS
    00000470 E001                   MOV         #1,R0
    00000472              L448:                             
      EasyInput.   260                    i++;
    00000472 7001                   ADD         #1,R0
    00000474              L446:                             
    00000474 035C                   MOV.B       @(R0,R5),R3
    00000476 2338                   TST         R3,R3
    00000478 8BF5                   BF          L447
      EasyInput.   261            }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Apr-2015 14:05:14  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      EasyInput.   262    
      EasyInput.   263            return 0;
    0000047A E000                   MOV         #0,R0
      EasyInput.   264    }
    0000047C              L449:                             
    0000047C 000B                   RTS
    0000047E 0009                   NOP
    00000480              L465:                             
    00000480 7539                   .DATA.W     H'7539
    00000482 0000                   .DATA.W     0
    00000484 <00000000>             .DATA.L     __$config$347
    00000488 <00000004>             .DATA.L     H'00000004+__$config$347
    0000048C <00000008>             .DATA.L     H'00000008+__$config$347
    00000490 <0000000C>             .DATA.L     H'0000000C+__$config$347
    00000494 <00000010>             .DATA.L     H'00000010+__$config$347
    00000498 <00000014>             .DATA.L     H'00000014+__$config$347
C   00000000              L319:
    00000000 E69A00                 .DATA.B     H'E6,H'9A,H'00
    00000003 00000001               .RES.B      1
    00000004              L332:
    00000004 20                     .SDATA      " "
    00000005 00                     .DATA.B     H'00
B   00000000              __$config$347:                   ; static: config
    00000000 00000018               .RES.L      6





































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Apr-2015 14:05:14  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      264



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               0000049C Byte(s)
CONSTANT SECTION (C):                               00000006 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000018 Byte(s)

 TOTAL PROGRAM SIZE: 000004BA Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           10
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           5
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            83






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\mosnier\AppData\Local\Temp\hmk753F.tmp 

